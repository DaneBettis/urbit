#!/usr/bin/env bash

# generated by janeway v0.14.3
#
# shellcheck disable=SC2039,SC2034,SC1091

set -e
set -o pipefail
GIT="git"
SED="sed"
NPM="npm"
GSUTIL="gsutil"
GCLOUD=gcloud
HUB="hub"
MSMTP="msmtp"
URBIT="urbit"
HERB="herb"
MKTEMP="mktemp"

if [[ ! $(type -P $GIT) ]]; then
  echo "ERROR: git not found"
  exit 1
else
  :
fi

if [[ ! $(type -P $SED) ]]; then
  echo "ERROR: sed not found"
  exit 1
else
  :
fi

if [[ ! $(type -P $HUB) ]]; then
  echo "ERROR: hub not found"
  exit 1
else
  :
fi

if [[ ! $(type -P $GSUTIL) ]]; then
  echo "ERROR: gsutil not found"
  exit 1
else
  :
fi

if [[ ! $(type -P $GCLOUD) ]]; then
  echo "ERROR: gcloud not found"
  exit 1
else
  :
fi

if [[ ! $(type -P $NPM) ]]; then
  echo "ERROR: npm not found"
  exit 1
else
  :
fi

if [[ ! $(type -P $URBIT) ]]; then
  echo "ERROR: urbit not found"
  exit 1
else
  :
fi

if [[ ! $(type -P $HERB) ]]; then
  echo "ERROR: herb not found"
  exit 1
else
  :
fi

if [[ ! $(type -P $MKTEMP) ]]; then
  echo "ERROR: mktemp not found"
  exit 1
else
  :
fi

janeway() {
  set -e
  set -o pipefail
  if [[ ! -d pkg/btc-wallet ]]; then
    echo "ERROR: pkg/btc-wallet not found"
    exit 1
  else
    pushd pkg/btc-wallet
    $NPM install --scripts-prepend-node-path && $NPM run build:prod --scripts-prepend-node-path
    popd
  fi
  if [[ ! -d pkg/interface ]]; then
    echo "ERROR: pkg/interface not found"
    exit 1
  else
    pushd pkg/interface
    $NPM install --scripts-prepend-node-path && $NPM run build:prod --scripts-prepend-node-path
    popd
  fi
  PIER=$($MKTEMP --dry-run "${TMPDIR:-/tmp/}fakezod.janeway.XXXXXXXXX")
  if [ ! -f bin/solid.pill ]; then
    echo "ERROR: bin/solid.pill not found"
    exit 1
  else
    SIZE=$(du -k bin/solid.pill | cut -f1)
    if [ "$SIZE" -lt 10 ]; then
      echo "ERROR: bin/solid.pill appears to be an LFS pointer"
      exit 1
    else
      $URBIT -dF zod -B bin/solid.pill -A pkg/arvo -c "$PIER"
    fi
  fi
  $HERB "$PIER" -p glob -d "+glob/make /app/btc-wallet/js/bundle"
  
  GLOBPATH=$(ls "$PIER"/.urb/put/*.glob)
  GLOBFILE=${GLOBPATH##*/}
  GLOBBASE=${GLOBFILE%%.glob}
  GLOBHASH=${GLOBBASE##glob-}
  JSPATH=$(ls pkg/arvo/app/btc-wallet/js/bundle/index.*.js)
  JSFILE=${JSPATH##*/}
  
  $SED --in-place \
      "s/^\+\+  btc-wallet-hash(.*)$/++  btc-wallet-hash  $GLOBHASH :: DO NOT MOVE FROM LINE 8/" \
      pkg/arvo/app/glob.hoon
  
  $HERB "$PIER" -p hood -d '+hood/mount /=home='
  cp pkg/arvo/app/glob.hoon "$PIER"/home/app/glob.hoon
  rm -f "$PIER"/home/app/btc-wallet/js/bundle/"$JSFILE"
  $SED -E --in-place "s/index\.(js|([a-z]|[0-9])*\.js)/$JSFILE/" pkg/arvo/app/btc-wallet/index.html
  cp pkg/arvo/app/btc-wallet/index.html "$PIER"/home/app/btc-wallet/index.html
  $HERB "$PIER" -p hood -d '+hood/commit %home'
  
  if [ ! -f "$GLOBPATH" ]; then
    echo "ERROR: $GLOBPATH not found"
    exit 1
  else
    $GSUTIL cp "$GLOBPATH" gs://bootstrap.urbit.org/"$GLOBFILE"
  fi
  rm "$GLOBPATH"
  $HERB "$PIER" -p glob -d "+glob/make /app/landscape/js/bundle"
  
  GLOBPATH=$(ls "$PIER"/.urb/put/*.glob)
  GLOBFILE=${GLOBPATH##*/}
  GLOBBASE=${GLOBFILE%%.glob}
  GLOBHASH=${GLOBBASE##glob-}
  JSPATH=$(ls pkg/arvo/app/landscape/js/bundle/index.*.js)
  JSFILE=${JSPATH##*/}
  
  $SED --in-place \
      "s/^\+\+  landscape-hash(.*)$/++  landscape-hash  $GLOBHASH :: DO NOT MOVE FROM LINE 8/" \
      pkg/arvo/app/glob.hoon
  
  $HERB "$PIER" -p hood -d '+hood/mount /=home='
  cp pkg/arvo/app/glob.hoon "$PIER"/home/app/glob.hoon
  rm -f "$PIER"/home/app/landscape/js/bundle/"$JSFILE"
  $SED -E --in-place "s/index\.(js|([a-z]|[0-9])*\.js)/$JSFILE/" pkg/arvo/app/landscape/index.html
  cp pkg/arvo/app/landscape/index.html "$PIER"/home/app/landscape/index.html
  $HERB "$PIER" -p hood -d '+hood/commit %home'
  
  if [ ! -f "$GLOBPATH" ]; then
    echo "ERROR: $GLOBPATH not found"
    exit 1
  else
    $GSUTIL cp "$GLOBPATH" gs://bootstrap.urbit.org/"$GLOBFILE"
  fi
  rm "$GLOBPATH"
  $SED -E --in-place "8s/.*/\`$GLOBHASH\`/" pkg/btc-wallet/README.md
  $HERB "$PIER" -P solid.pill -d '+solid'
  mv -f solid.pill ./bin/solid.pill
  $GIT -c user.name=janeway -c user.email=janeway@urbit.org \
    add pkg/arvo/app/glob.hoon
  $GIT -c user.name=janeway -c user.email=janeway@urbit.org \
    add pkg/arvo/app/landscape/index.html
  $GIT -c user.name=janeway -c user.email=janeway@urbit.org \
    add pkg/arvo/app/btc-wallet/index.html
  $GIT -c user.name=janeway -c user.email=janeway@urbit.org \
    add pkg/btc-wallet/README.md
  $GIT -c user.name=janeway -c user.email=janeway@urbit.org \
    add bin/solid.pill
  $GIT -c user.name=janeway -c user.email=janeway@urbit.org \
    commit -m "glob: update to $GLOBHASH"
  GLOB_RELEASE_HASH=$($GIT rev-parse --short HEAD)
  $GIT -c user.name=janeway -c user.email=janeway@urbit.org \
    archive --prefix=arvo-glob-"$GLOB_RELEASE_HASH"/ \
      -o arvo-glob-"$GLOB_RELEASE_HASH".tar.gz HEAD :pkg/arvo
  if [ -f arvo-glob-"$GLOB_RELEASE_HASH".tar.gz ]; then
    $GSUTIL cp arvo-glob-"$GLOB_RELEASE_HASH".tar.gz gs://bootstrap.urbit.org/arvo-glob-"$GLOB_RELEASE_HASH".tar.gz
  else
    echo "ERROR: arvo-glob-$GLOB_RELEASE_HASH.tar.gz does not exist"
    exit 1
  fi
  if [ -e "$PIER"/.vere.lock ]; then
    kill -3 "$(< "$PIER"/.vere.lock)"
    while kill -0 "$(< "$PIER"/.vere.lock)" &> /dev/null; do
      sleep 1
    done
    rm -rf "$PIER"
  else
    rm -rf "$PIER"
  fi
}
export -f janeway

janeway
